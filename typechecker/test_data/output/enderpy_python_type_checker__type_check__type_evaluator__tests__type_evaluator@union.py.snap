---
source: typechecker/src/type_check/type_evaluator.rs
description: "from typing import Union, Literal\nfrom enum import Enum\n\nclass Empty(Enum):\n    token = 0\n\na: Union[str, int]\n\nb: str | None\n\nc: Union[str, int, None]\n\n# failing test enable after handling Union types with more than 2 types\nc: str | Empty | None\n\nc: str | Empty | None | int\n"
expression: result
input_file: typechecker/test_data/inputs/union.py
---
'0': Int
'Union[str, int]': MultiValue([Unknown, Unknown])
'str | None': MultiValue([Unknown, None])
'Union[str, int, None]': MultiValue([Unknown, Unknown, None])
'str | Empty | None': MultiValue([Unknown, Unknown, None])
'str | Empty | None | int': MultiValue([None, Unknown, Unknown, Unknown])
