---
source: typechecker/src/build.rs
description: "a = 1\nb = \"1\"\nc = True\nd = False\na + int(b)\n\n\na + c\n\ndef func(param1: int) -> int:\n\treturn param1 + a\n\nclass C:\n\tcls_attribute = 1\n\n\tdef __init__(self, x: int):\n\t\tprint(self.cls_attribute)\n\t\tself.x = float(x)\n\t\tprint(self.x)\n\n\tdef add(self, value: int):\n\t\tself.cls_attribute += value\n\n\tdef get_attr(self) -> int:\n\t\treturn self.cls_attribute\n\n\tdef\tget_x(self) -> float:\n\t\treturn self.x\n\nt = C(0)\nt.add(2)\nt.cls_attribute\nt.x\nt.get_x()\nt.get_attr()\n\nl = [1,2,3]\nd = {\"a\": 1, \"b\": 2}\ns = {1,2,3}\n\nl.append(4)\n\n"
expression: result
input_file: typechecker/test_data/inputs/basic_types.py
---
Symbols in C
__init__
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
add
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
cls_attribute
SymbolFlags(
    CLASS_MEMBER,
)
- Declarations:
id: [ID]
get_attr
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
get_x
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
x
SymbolFlags(
    INSTANCE_MEMBER,
)
- Declarations:
id: [ID]

Symbols in __init__
self
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
x
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]

Symbols in add
self
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
value
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]

Symbols in func
param1
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]

Symbols in get_attr
self
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]

Symbols in get_x
self
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]

Symbols in global
C
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
a
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
b
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
c
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
d
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
func
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
l
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
s
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]
t
SymbolFlags(
    0x0,
)
- Declarations:
id: [ID]

Scopes:

Scope C
Scope __init__
Scope add
Scope func
Scope get_attr
Scope get_x
Scope global

