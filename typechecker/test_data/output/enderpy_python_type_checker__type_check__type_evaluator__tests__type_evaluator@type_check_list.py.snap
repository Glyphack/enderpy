---
source: typechecker/src/type_check/type_evaluator.rs
description: "1: a: list[int] = [1, 2, 3]\n2: \n3: b = a[0] + 1\n4: \n5: c = a[0] + a[1]\n6: \n7: # invalid usage of types\n8: d = a[0] + \"str\"\n9: \n10: # valid reassignment\n11: a = [1]\n12: # invalid reassignment\n13: a = [1, 2, \"str\"]\n"
expression: result
input_file: typechecker/test_data/inputs/type_check_list.py
---
Line 1: a: list[int] = [1, 2, 3]

Expr types in the line --->:
        "[1, 2, 3]" => Class(ClassType { details: Class { name: "list", declaration_path: DeclarationPath { module_name: [TYPESHED].stdlib/builtins.pyi", node: Node { start: 43505, end: 46298 } }, methods: ["__init__", "__init__", "copy", "append", "extend", "pop", "index", "count", "insert", "remove", "sort", "sort", "__len__", "__iter__", "__getitem__", "__getitem__", "__setitem__", "__setitem__", "__delitem__", "__add__", "__add__", "__iadd__", "__mul__", "__rmul__", "__imul__", "__contains__", "__reversed__", "__gt__", "__ge__", "__lt__", "__le__", "__eq__"], attributes: {}, special: false }, type_parameters: [Int] })
        "list[int]" => Class(ClassType { details: Class { name: "list", declaration_path: DeclarationPath { module_name: [TYPESHED].stdlib/builtins.pyi", node: Node { start: 43505, end: 46298 } }, methods: ["__init__", "__init__", "copy", "append", "extend", "pop", "index", "count", "insert", "remove", "sort", "sort", "__len__", "__iter__", "__getitem__", "__getitem__", "__setitem__", "__setitem__", "__delitem__", "__add__", "__add__", "__iadd__", "__mul__", "__rmul__", "__imul__", "__contains__", "__reversed__", "__gt__", "__ge__", "__lt__", "__le__", "__eq__"], attributes: {}, special: false }, type_parameters: [Unknown] })

---
Line 3: b = a[0] + 1

Expr types in the line --->:
        "a[0] + 1" => Unknown

---
Line 5: c = a[0] + a[1]

Expr types in the line --->:
        "a[0] + a[1]" => Unknown

---
Line 8: d = a[0] + "str"

Expr types in the line --->:
        "a[0] + \"str\"" => Unknown

---
Line 11: a = [1]

Expr types in the line --->:
        "[1]" => Class(ClassType { details: Class { name: "list", declaration_path: DeclarationPath { module_name: [TYPESHED].stdlib/builtins.pyi", node: Node { start: 43505, end: 46298 } }, methods: ["__init__", "__init__", "copy", "append", "extend", "pop", "index", "count", "insert", "remove", "sort", "sort", "__len__", "__iter__", "__getitem__", "__getitem__", "__setitem__", "__setitem__", "__delitem__", "__add__", "__add__", "__iadd__", "__mul__", "__rmul__", "__imul__", "__contains__", "__reversed__", "__gt__", "__ge__", "__lt__", "__le__", "__eq__"], attributes: {}, special: false }, type_parameters: [Int] })

---
Line 13: a = [1, 2, "str"]

Expr types in the line --->:
        "[1, 2, \"str\"]" => Class(ClassType { details: Class { name: "list", declaration_path: DeclarationPath { module_name: [TYPESHED].stdlib/builtins.pyi", node: Node { start: 43505, end: 46298 } }, methods: ["__init__", "__init__", "copy", "append", "extend", "pop", "index", "count", "insert", "remove", "sort", "sort", "__len__", "__iter__", "__getitem__", "__getitem__", "__setitem__", "__setitem__", "__delitem__", "__add__", "__add__", "__iadd__", "__mul__", "__rmul__", "__imul__", "__contains__", "__reversed__", "__gt__", "__ge__", "__lt__", "__le__", "__eq__"], attributes: {}, special: false }, type_parameters: [Unknown] })

---

