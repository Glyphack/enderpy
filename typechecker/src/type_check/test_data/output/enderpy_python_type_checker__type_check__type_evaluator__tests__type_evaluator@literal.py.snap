---
source: typechecker/src/type_check/type_evaluator.rs
description: "from typing import Literal\n\n\na: Literal[\"foo\"] = \"foo\"\n\n\nclass Foo:\n    def __init__(self, name: Literal[\"foo\"]) -> None:\n        self.name = name\n\n\ndef func(literal_name: Literal[\"foo\"]) -> None:\n    print(literal_name)\n"
expression: result
input_file: typechecker/src/type_check/test_data/inputs/literal.py
---
[
    (
        "(line: 12, character: 10):(line: 12, character: 22)",
        Unknown,
    ),
    (
        "(line: 12, character: 4):(line: 12, character: 9)",
        Unknown,
    ),
    (
        "(line: 3, character: 20):(line: 3, character: 25)",
        Str,
    ),
    (
        "(line: 3, character: 3):(line: 3, character: 17)",
        Class(
            ClassType {
                details: Class {
                    name: "Literal",
                    declaration_path: DeclarationPath {
                        module_name: [TYPESHED].stdlib/typing.pyi",
                        node: Node {
                            start: 5140,
                            end: 5161,
                        },
                    },
                    methods: [],
                    attributes: {},
                },
                type_parameters: [
                    Unknown,
                ],
            },
        ),
    ),
    (
        "(line: 8, character: 20):(line: 8, character: 24)",
        Unknown,
    ),
]
