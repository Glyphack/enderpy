---
source: parser/src/parser/parser.rs
description: "test file: test_data/inputs/binary_op.py\n1 + 2\n\n1 - 2\n\n1 * 2\n\n1 / 2\n\n1 // 2\n\n1 % 2\n\n1 ** 2\n\n1 << 2\n\n1 >> 2\n\n1 & 2\n\n1 ^ 2\n\n1 | 2\n\n1 | 2 | 3\n\n1 @ 2\n"
---
Module {
    node: Node {
        start: 0,
        end: 105,
    },
    body: [
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 0,
                        end: 5,
                    },
                    op: Add,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 0,
                                end: 1,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 4,
                                end: 5,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 7,
                        end: 12,
                    },
                    op: Sub,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 7,
                                end: 8,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 11,
                                end: 12,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 14,
                        end: 19,
                    },
                    op: Mult,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 14,
                                end: 15,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 18,
                                end: 19,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 21,
                        end: 26,
                    },
                    op: Div,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 21,
                                end: 22,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 25,
                                end: 26,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 28,
                        end: 34,
                    },
                    op: FloorDiv,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 28,
                                end: 29,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 33,
                                end: 34,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 36,
                        end: 41,
                    },
                    op: Mod,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 36,
                                end: 37,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 40,
                                end: 41,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 43,
                        end: 49,
                    },
                    op: Pow,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 43,
                                end: 44,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 48,
                                end: 49,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 51,
                        end: 57,
                    },
                    op: LShift,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 51,
                                end: 52,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 56,
                                end: 57,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 59,
                        end: 65,
                    },
                    op: RShift,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 59,
                                end: 60,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 64,
                                end: 65,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 67,
                        end: 72,
                    },
                    op: BitAnd,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 67,
                                end: 68,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 71,
                                end: 72,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 74,
                        end: 79,
                    },
                    op: BitXor,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 74,
                                end: 75,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 78,
                                end: 79,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 81,
                        end: 86,
                    },
                    op: BitOr,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 81,
                                end: 82,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 85,
                                end: 86,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 88,
                        end: 97,
                    },
                    op: BitOr,
                    left: BinOp(
                        BinOp {
                            node: Node {
                                start: 88,
                                end: 93,
                            },
                            op: BitOr,
                            left: Constant(
                                Constant {
                                    node: Node {
                                        start: 88,
                                        end: 89,
                                    },
                                    value: Int,
                                },
                            ),
                            right: Constant(
                                Constant {
                                    node: Node {
                                        start: 92,
                                        end: 93,
                                    },
                                    value: Int,
                                },
                            ),
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 96,
                                end: 97,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
        ExpressionStatement(
            BinOp(
                BinOp {
                    node: Node {
                        start: 99,
                        end: 104,
                    },
                    op: MatMult,
                    left: Constant(
                        Constant {
                            node: Node {
                                start: 99,
                                end: 100,
                            },
                            value: Int,
                        },
                    ),
                    right: Constant(
                        Constant {
                            node: Node {
                                start: 103,
                                end: 104,
                            },
                            value: Int,
                        },
                    ),
                },
            ),
        ),
    ],
}
