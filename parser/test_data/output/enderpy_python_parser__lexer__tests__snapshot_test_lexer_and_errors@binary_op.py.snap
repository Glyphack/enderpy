---
source: parser/src/lexer/mod.rs
description: "1 + 2\n\n1 - 2\n\n1 * 2\n\n1 / 2\n\n1 // 2\n\n1 % 2\n\n1 ** 2\n\n1 << 2\n\n1 >> 2\n\n1 & 2\n\n1 ^ 2\n\n1 | 2\n\n1 | 2 | 3\n\n1 @ 2\n"
input_file: parser/test_data/inputs/binary_op.py
---
0,1: Integer   1
2,3: +
4,5: Integer   2
5,6: NewLine
6,7: NL
7,8: Integer   1
9,10: -
11,12: Integer   2
12,13: NewLine
13,14: NL
14,15: Integer   1
16,17: *
18,19: Integer   2
19,20: NewLine
20,21: NL
21,22: Integer   1
23,24: /
25,26: Integer   2
26,27: NewLine
27,28: NL
28,29: Integer   1
30,32: //
33,34: Integer   2
34,35: NewLine
35,36: NL
36,37: Integer   1
38,39: %
40,41: Integer   2
41,42: NewLine
42,43: NL
43,44: Integer   1
45,47: **
48,49: Integer   2
49,50: NewLine
50,51: NL
51,52: Integer   1
53,55: <<
56,57: Integer   2
57,58: NewLine
58,59: NL
59,60: Integer   1
61,63: >>
64,65: Integer   2
65,66: NewLine
66,67: NL
67,68: Integer   1
69,70: &
71,72: Integer   2
72,73: NewLine
73,74: NL
74,75: Integer   1
76,77: ^
78,79: Integer   2
79,80: NewLine
80,81: NL
81,82: Integer   1
83,84: |
85,86: Integer   2
86,87: NewLine
87,88: NL
88,89: Integer   1
90,91: |
92,93: Integer   2
94,95: |
96,97: Integer   3
97,98: NewLine
98,99: NL
99,100: Integer   1
101,102: @
103,104: Integer   2
104,105: NewLine
