---
source: parser/src/lexer/mod.rs
description: "# in some cases last price or adj price is undefined\ntry:\n    last_price = int(price_section[2])\n# when instead of number value is `F`\nexcept (ValueError, IndexError):\n    last_price = None\ntry:\n    adj_close = int(price_section[3])\nexcept (ValueError, IndexError):\n    adj_close = None\ntry:\n    market_cap = adj_close * self.total_shares\nexcept ValueError:\n    market_cap = None\n\n\ntry:\n    async with session.get(\n        url, headers=TRADE_DETAILS_HEADER, timeout=100\n    ) as response:\n        if response.status == 503:\n            logger.info(\n                f\"Received 503 Service Unavailable on {date_obj}. Retrying...\"\n            )\n            retry_count += 1\n            await asyncio.sleep(1)\n        else:\n            response.raise_for_status()\n            data = await response.json()\n            logger.info(\n                f\"Successfully fetched trade details on {date_obj} from tse\"\n            )\n            return [date_obj, pd.json_normalize(data[\"tradeHistory\"])]\nexcept (aiohttp.ClientError, asyncio.TimeoutError):\n    logger.error(f\"Request failed for {date_obj}. Retrying...\")\n    retry_count += 1\n    await asyncio.sleep(1)\n"
input_file: parser/test_data/inputs/try.py
---
0,52: Comment   (Str("# in some cases last price or adj price is undefined"))
52,53: NewLine   (None)
53,56: Try   (None)
56,57: :   (None)
57,58: NewLine   (None)
58,62: Indent   (Indent(1))
62,72: Identifier   (Str("last_price"))
73,74: =   (None)
75,78: Identifier   (Str("int"))
78,79: (   (None)
79,92: Identifier   (Str("price_section"))
92,93: [   (None)
93,94: Integer   (Number("2"))
94,95: ]   (None)
95,96: )   (None)
96,97: NewLine   (None)
97,97: Dedent   (Indent(1))
97,134: Comment   (Str("# when instead of number value is `F`"))
134,135: NewLine   (None)
135,141: Except   (None)
142,143: (   (None)
143,153: Identifier   (Str("ValueError"))
153,154: ,   (None)
155,165: Identifier   (Str("IndexError"))
165,166: )   (None)
166,167: :   (None)
167,168: NewLine   (None)
168,172: Indent   (Indent(1))
172,182: Identifier   (Str("last_price"))
183,184: =   (None)
185,189: None   (None)
189,190: NewLine   (None)
190,190: Dedent   (Indent(1))
190,193: Try   (None)
193,194: :   (None)
194,195: NewLine   (None)
195,199: Indent   (Indent(1))
199,208: Identifier   (Str("adj_close"))
209,210: =   (None)
211,214: Identifier   (Str("int"))
214,215: (   (None)
215,228: Identifier   (Str("price_section"))
228,229: [   (None)
229,230: Integer   (Number("3"))
230,231: ]   (None)
231,232: )   (None)
232,233: NewLine   (None)
233,233: Dedent   (Indent(1))
233,239: Except   (None)
240,241: (   (None)
241,251: Identifier   (Str("ValueError"))
251,252: ,   (None)
253,263: Identifier   (Str("IndexError"))
263,264: )   (None)
264,265: :   (None)
265,266: NewLine   (None)
266,270: Indent   (Indent(1))
270,279: Identifier   (Str("adj_close"))
280,281: =   (None)
282,286: None   (None)
286,287: NewLine   (None)
287,287: Dedent   (Indent(1))
287,290: Try   (None)
290,291: :   (None)
291,292: NewLine   (None)
292,296: Indent   (Indent(1))
296,306: Identifier   (Str("market_cap"))
307,308: =   (None)
309,318: Identifier   (Str("adj_close"))
319,320: *   (None)
321,325: Identifier   (Str("self"))
325,326: .   (None)
326,338: Identifier   (Str("total_shares"))
338,339: NewLine   (None)
339,339: Dedent   (Indent(1))
339,345: Except   (None)
346,356: Identifier   (Str("ValueError"))
356,357: :   (None)
357,358: NewLine   (None)
358,362: Indent   (Indent(1))
362,372: Identifier   (Str("market_cap"))
373,374: =   (None)
375,379: None   (None)
379,380: NewLine   (None)
380,381: NewLine   (None)
381,382: NewLine   (None)
382,382: Dedent   (Indent(1))
382,385: Try   (None)
385,386: :   (None)
386,387: NewLine   (None)
387,391: Indent   (Indent(1))
391,396: Async   (None)
397,401: With   (None)
402,409: Identifier   (Str("session"))
409,410: .   (None)
410,413: Identifier   (Str("get"))
413,414: (   (None)
414,415: NewLine   (None)
423,426: Identifier   (Str("url"))
426,427: ,   (None)
428,435: Identifier   (Str("headers"))
435,436: =   (None)
436,456: Identifier   (Str("TRADE_DETAILS_HEADER"))
456,457: ,   (None)
458,465: Identifier   (Str("timeout"))
465,466: =   (None)
466,469: Integer   (Number("100"))
469,470: NewLine   (None)
474,475: )   (None)
476,478: As   (None)
479,487: Identifier   (Str("response"))
487,488: :   (None)
488,489: NewLine   (None)
489,497: Indent   (Indent(1))
497,499: If   (None)
500,508: Identifier   (Str("response"))
508,509: .   (None)
509,515: Identifier   (Str("status"))
516,518: ==   (None)
519,522: Integer   (Number("503"))
522,523: :   (None)
523,524: NewLine   (None)
524,536: Indent   (Indent(1))
536,542: Identifier   (Str("logger"))
542,543: .   (None)
543,547: Identifier   (Str("info"))
547,548: (   (None)
548,549: NewLine   (None)
565,567: FStringStart   (Str("f\""))
567,603: FstringMiddle   (Str("Received 503 Service Unavailable on "))
603,604: {   (None)
604,612: Identifier   (Str("date_obj"))
612,613: }   (None)
613,626: FstringMiddle   (Str(". Retrying..."))
626,627: FStringEnd   (Str("\""))
627,628: NewLine   (None)
640,641: )   (None)
641,642: NewLine   (None)
654,665: Identifier   (Str("retry_count"))
666,668: +=   (None)
669,670: Integer   (Number("1"))
670,671: NewLine   (None)
683,688: Await   (None)
689,696: Identifier   (Str("asyncio"))
696,697: .   (None)
697,702: Identifier   (Str("sleep"))
702,703: (   (None)
703,704: Integer   (Number("1"))
704,705: )   (None)
705,706: NewLine   (None)
706,714: Dedent   (Indent(1))
714,718: Else   (None)
718,719: :   (None)
719,720: NewLine   (None)
720,732: Indent   (Indent(1))
732,740: Identifier   (Str("response"))
740,741: .   (None)
741,757: Identifier   (Str("raise_for_status"))
757,758: (   (None)
758,759: )   (None)
759,760: NewLine   (None)
772,776: Identifier   (Str("data"))
777,778: =   (None)
779,784: Await   (None)
785,793: Identifier   (Str("response"))
793,794: .   (None)
794,798: Identifier   (Str("json"))
798,799: (   (None)
799,800: )   (None)
800,801: NewLine   (None)
813,819: Identifier   (Str("logger"))
819,820: .   (None)
820,824: Identifier   (Str("info"))
824,825: (   (None)
825,826: NewLine   (None)
842,844: FStringStart   (Str("f\""))
844,882: FstringMiddle   (Str("Successfully fetched trade details on "))
882,883: {   (None)
883,891: Identifier   (Str("date_obj"))
891,892: }   (None)
892,901: FstringMiddle   (Str(" from tse"))
901,902: FStringEnd   (Str("\""))
902,903: NewLine   (None)
915,916: )   (None)
916,917: NewLine   (None)
929,935: Return   (None)
936,937: [   (None)
937,945: Identifier   (Str("date_obj"))
945,946: ,   (None)
947,949: Identifier   (Str("pd"))
949,950: .   (None)
950,964: Identifier   (Str("json_normalize"))
964,965: (   (None)
965,969: Identifier   (Str("data"))
969,970: [   (None)
970,984: StringLiteral   (Str("\"tradeHistory\""))
984,985: ]   (None)
985,986: )   (None)
986,987: ]   (None)
987,988: NewLine   (None)
988,988: Dedent   (Indent(3))
988,988: Dedent   (None)
988,988: Dedent   (None)
988,994: Except   (None)
995,996: (   (None)
996,1003: Identifier   (Str("aiohttp"))
1003,1004: .   (None)
1004,1015: Identifier   (Str("ClientError"))
1015,1016: ,   (None)
1017,1024: Identifier   (Str("asyncio"))
1024,1025: .   (None)
1025,1037: Identifier   (Str("TimeoutError"))
1037,1038: )   (None)
1038,1039: :   (None)
1039,1040: NewLine   (None)
1040,1044: Indent   (Indent(1))
1044,1050: Identifier   (Str("logger"))
1050,1051: .   (None)
1051,1056: Identifier   (Str("error"))
1056,1057: (   (None)
1057,1059: FStringStart   (Str("f\""))
1059,1078: FstringMiddle   (Str("Request failed for "))
1078,1079: {   (None)
1079,1087: Identifier   (Str("date_obj"))
1087,1088: }   (None)
1088,1101: FstringMiddle   (Str(". Retrying..."))
1101,1102: FStringEnd   (Str("\""))
1102,1103: )   (None)
1103,1104: NewLine   (None)
1108,1119: Identifier   (Str("retry_count"))
1120,1122: +=   (None)
1123,1124: Integer   (Number("1"))
1124,1125: NewLine   (None)
1129,1134: Await   (None)
1135,1142: Identifier   (Str("asyncio"))
1142,1143: .   (None)
1143,1148: Identifier   (Str("sleep"))
1148,1149: (   (None)
1149,1150: Integer   (Number("1"))
1150,1151: )   (None)
1151,1152: NewLine   (None)
1152,1152: Dedent   (Indent(1))
